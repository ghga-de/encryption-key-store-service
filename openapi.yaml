components:
  schemas:
    Body_post_encryption_secrets_secrets_post:
      properties:
        config:
          allOf:
          - $ref: '#/components/schemas/VaultConfig'
          default:
            api_root_path: /
            auto_reload: false
            docs_url: /docs
            host: 127.0.0.1
            log_level: info
            openapi_url: /openapi.json
            port: 8080
            server_private_key: '**********'
            server_public_key: HsKvfHsAFNGykFi/zMssay0xajoHvY30IcYPGDCXrGU=
            service_name: encryption_key_store
            vault_host: http://127.0.0.1
            vault_port: 8200
            vault_token: '**********'
            workers: 1
          title: Config
        envelope_query:
          $ref: '#/components/schemas/InboundEnvelopeQuery'
      required:
      - envelope_query
      title: HttpEnvelopeDecrpytionErrorData
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HttpEnvelopeDecrpytionError:
      additionalProperties: false
      description: A custom exception body model.
      properties:
        data:
          $ref: '#/components/schemas/HttpEnvelopeDecrpytionErrorData'
        description:
          description: A human readable message to the client explaining the cause
            of the exception.
          title: Description
          type: string
        exception_id:
          enum:
          - envelopeDecryptionError
          title: Exception Id
          type: string
      required:
      - data
      - description
      - exception_id
      title: HttpEnvelopeDecrpytionErrorData
      type: object
    HttpEnvelopeDecrpytionErrorData:
      description: Model for exception data
      properties: {}
      title: HttpEnvelopeDecrpytionErrorData
      type: object
    HttpMalformedOrMissingEnvelopeError:
      additionalProperties: false
      description: A custom exception body model.
      properties:
        data:
          $ref: '#/components/schemas/HttpMalformedOrMissingEnvelopeErrorData'
        description:
          description: A human readable message to the client explaining the cause
            of the exception.
          title: Description
          type: string
        exception_id:
          enum:
          - malformedOrMissingEnvelopeError
          title: Exception Id
          type: string
      required:
      - data
      - description
      - exception_id
      title: HttpEnvelopeDecrpytionErrorData
      type: object
    HttpMalformedOrMissingEnvelopeErrorData:
      description: Model for exception data
      properties: {}
      title: HttpEnvelopeDecrpytionErrorData
      type: object
    HttpSecretNotFoundError:
      additionalProperties: false
      description: A custom exception body model.
      properties:
        data:
          $ref: '#/components/schemas/HttpSecretNotFoundErrorData'
        description:
          description: A human readable message to the client explaining the cause
            of the exception.
          title: Description
          type: string
        exception_id:
          enum:
          - secretNotFoundError
          title: Exception Id
          type: string
      required:
      - data
      - description
      - exception_id
      title: HttpEnvelopeDecrpytionErrorData
      type: object
    HttpSecretNotFoundErrorData:
      description: Model for exception data
      properties: {}
      title: HttpEnvelopeDecrpytionErrorData
      type: object
    InboundEnvelopeContent:
      description: 'Contains file encryption/decryption secret extracted from file
        envelope, the ID

        generated for this secret and the file content offset, i.e. the location of
        the

        encrypted file content within the file.'
      properties:
        offset:
          title: Offset
          type: integer
        secret:
          title: Secret
          type: string
        secret_id:
          title: Secret Id
          type: string
      required:
      - secret
      - secret_id
      - offset
      title: HttpEnvelopeDecrpytionErrorData
      type: object
    InboundEnvelopeQuery:
      description: Request object containing first file part and a public key.
      properties:
        file_part:
          title: File Part
          type: string
        public_key:
          title: Public Key
          type: string
      required:
      - file_part
      - public_key
      title: HttpEnvelopeDecrpytionErrorData
      type: object
    OutboundEnvelopeContent:
      description: 'Contains the header envelope, which contains the file secret encrypted
        with the

        client''s public key and the server''s private key'
      properties:
        content:
          title: Content
          type: string
      required:
      - content
      title: HttpEnvelopeDecrpytionErrorData
      type: object
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    VaultConfig:
      additionalProperties: false
      description: Configuration for HashiCorp Vault connection
      properties:
        vault_host:
          description: URL of the vault instance to connect to without port number
          env_names:
          - vault_host
          example: http://127.0.0.1
          title: Vault Host
          type: string
        vault_port:
          description: Port number of the vault instance to connect to
          env_names:
          - vault_port
          example: '8200'
          title: Vault Port
          type: integer
        vault_token:
          description: Token used for authentication against HashiCorp Vault
          env_names:
          - vault_token
          example: dummy-token
          format: password
          title: Vault Token
          type: string
          writeOnly: true
      required:
      - vault_host
      - vault_port
      - vault_token
      title: HttpEnvelopeDecrpytionErrorData
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.0.2
paths:
  /secrets:
    post:
      description: 'Extract file encryption/decryption secret, create secret ID and
        extract

        file content offset'
      operationId: postEncryptionData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_post_encryption_secrets_secrets_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundEnvelopeContent'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpMalformedOrMissingEnvelopeError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpEnvelopeDecrpytionError'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Extract file encryption/decryption secret and file content offset from
        enevelope
  /secrets/{secret_id}/envelopes/{client_pk}:
    get:
      description: Create header envelope for the file secret with given ID encrypted
        with a given public key
      operationId: getEncryptionData
      parameters:
      - in: path
        name: secret_id
        required: true
        schema:
          title: Secret Id
          type: string
      - in: path
        name: client_pk
        required: true
        schema:
          title: Client Pk
          type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/VaultConfig'
              default:
                api_root_path: /
                auto_reload: false
                docs_url: /docs
                host: 127.0.0.1
                log_level: info
                openapi_url: /openapi.json
                port: 8080
                server_private_key: '**********'
                server_public_key: HsKvfHsAFNGykFi/zMssay0xajoHvY30IcYPGDCXrGU=
                service_name: encryption_key_store
                vault_host: http://127.0.0.1
                vault_port: 8200
                vault_token: '**********'
                workers: 1
              title: Config
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundEnvelopeContent'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpSecretNotFoundError'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get personalized envelope containing Crypt4GH file encryption/decryption
        key
