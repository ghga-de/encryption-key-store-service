{
  "title": "ModSettings",
  "description": "Modifies the orginal Settings class provided by the user",
  "type": "object",
  "properties": {
    "vault_host": {
      "title": "Vault Host",
      "description": "URL of the vault instance to connect to without port number",
      "example": "http://127.0.0.1",
      "env_names": [
        "ekss_vault_host"
      ],
      "type": "string"
    },
    "vault_port": {
      "title": "Vault Port",
      "description": "Port number of the vault instance to connect to",
      "example": "8200",
      "env_names": [
        "ekss_vault_port"
      ],
      "type": "integer"
    },
    "vault_token": {
      "title": "Vault Token",
      "description": "Token used for authentication against HashiCorp Vault",
      "example": "dummy-token",
      "env_names": [
        "ekss_vault_token"
      ],
      "type": "string",
      "writeOnly": true,
      "format": "password"
    },
    "host": {
      "title": "Host",
      "description": "IP of the host.",
      "default": "127.0.0.1",
      "env_names": [
        "ekss_host"
      ],
      "type": "string"
    },
    "port": {
      "title": "Port",
      "description": "Port to expose the server on the specified host",
      "default": 8080,
      "env_names": [
        "ekss_port"
      ],
      "type": "integer"
    },
    "log_level": {
      "title": "Log Level",
      "description": "Controls the verbosity of the log.",
      "default": "info",
      "env_names": [
        "ekss_log_level"
      ],
      "enum": [
        "critical",
        "error",
        "warning",
        "info",
        "debug",
        "trace"
      ],
      "type": "string"
    },
    "auto_reload": {
      "title": "Auto Reload",
      "description": "A development feature. Set to `True` to automatically reload the server upon code changes",
      "default": false,
      "env_names": [
        "ekss_auto_reload"
      ],
      "type": "boolean"
    },
    "workers": {
      "title": "Workers",
      "description": "Number of workers processes to run.",
      "default": 1,
      "env_names": [
        "ekss_workers"
      ],
      "type": "integer"
    },
    "api_root_path": {
      "title": "Api Root Path",
      "description": "Root path at which the API is reachable. This is relative to the specified host and port.",
      "default": "/",
      "env_names": [
        "ekss_api_root_path"
      ],
      "type": "string"
    },
    "openapi_url": {
      "title": "Openapi Url",
      "description": "Path to get the openapi specification in JSON format. This is relative to the specified host and port.",
      "default": "/openapi.json",
      "env_names": [
        "ekss_openapi_url"
      ],
      "type": "string"
    },
    "docs_url": {
      "title": "Docs Url",
      "description": "Path to host the swagger documentation. This is relative to the specified host and port.",
      "default": "/docs",
      "env_names": [
        "ekss_docs_url"
      ],
      "type": "string"
    },
    "cors_allowed_origins": {
      "title": "Cors Allowed Origins",
      "description": "A list of origins that should be permitted to make cross-origin requests. By default, cross-origin requests are not allowed. You can use ['*'] to allow any origin.",
      "example": [
        "https://example.org",
        "https://www.example.org"
      ],
      "env_names": [
        "ekss_cors_allowed_origins"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "cors_allow_credentials": {
      "title": "Cors Allow Credentials",
      "description": "Indicate that cookies should be supported for cross-origin requests. Defaults to False. Also, cors_allowed_origins cannot be set to ['*'] for credentials to be allowed. The origins must be explicitly specified.",
      "example": [
        "https://example.org",
        "https://www.example.org"
      ],
      "env_names": [
        "ekss_cors_allow_credentials"
      ],
      "type": "boolean"
    },
    "cors_allowed_methods": {
      "title": "Cors Allowed Methods",
      "description": "A list of HTTP methods that should be allowed for cross-origin requests. Defaults to ['GET']. You can use ['*'] to allow all standard methods.",
      "example": [
        "*"
      ],
      "env_names": [
        "ekss_cors_allowed_methods"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "cors_allowed_headers": {
      "title": "Cors Allowed Headers",
      "description": "A list of HTTP request headers that should be supported for cross-origin requests. Defaults to []. You can use ['*'] to allow all headers. The Accept, Accept-Language, Content-Language and Content-Type headers are always allowed for CORS requests.",
      "example": [],
      "env_names": [
        "ekss_cors_allowed_headers"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "service_name": {
      "title": "Service Name",
      "default": "encryption_key_store",
      "env_names": [
        "ekss_service_name"
      ],
      "type": "string"
    },
    "server_private_key": {
      "title": "Server Private Key",
      "description": "Base64 encoded server Crypt4GH private key",
      "example": "server_private_key",
      "env_names": [
        "ekss_server_private_key"
      ],
      "type": "string",
      "writeOnly": true,
      "format": "password"
    },
    "server_public_key": {
      "title": "Server Public Key",
      "description": "Base64 encoded server Crypt4GH public key",
      "example": "server_public_key",
      "env_names": [
        "ekss_server_public_key"
      ],
      "type": "string"
    }
  },
  "required": [
    "vault_host",
    "vault_port",
    "vault_token",
    "server_private_key",
    "server_public_key"
  ],
  "additionalProperties": false
}